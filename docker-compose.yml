version: "3.8"
services:
  lnbot:
    build: .
    container_name: ln-bot
    restart: always
    depends_on:
      postgres:
        condition: service_healthy
      redis:
        condition: service_healthy
      lnbot-db-migrate:
        condition: service_completed_successfully
    ports:
      - "${HTTPSERVER_PORT:-8001}:8001"
    env_file:
      - .env
    environment:
      - DATABASE_URL=postgresql://postgres:postgres@postgres:5432/ln-bot
      - REDIS_URL=redis://redis:6379

  lnbot-db-migrate:
    image: node:18-alpine
    container_name: lnbot-db-migrate
    environment:
      DATABASE_URL: postgresql://postgres:postgres@postgres:5432/ln-bot
    entrypoint: ['sh', '-c', 'npm install -g pnpm && pnpm add prisma@6.14.0 && npx prisma migrate deploy']
    volumes:
      - ./prisma:/app/prisma
    working_dir: /app
    depends_on:
      postgres:
        condition: service_healthy

  postgres:
    image: postgres:15-alpine
    container_name: postgres-server
    environment:
      POSTGRES_DB: ln-bot
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: postgres
    ports:
      - "5432:5432"
    volumes:
      - postgres-data:/var/lib/postgresql/data
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U postgres"]
      interval: 10s
      timeout: 5s
      retries: 5

  redis:
    image: redis:7-alpine
    container_name: redis-server
    ports:
      - "6379:6379"
    volumes:
      - redis-data:/data
    command: redis-server --appendonly yes
    healthcheck:
      test: ["CMD", "redis-cli", "ping"]
      interval: 10s
      timeout: 5s
      retries: 5

volumes:
  postgres-data:
  redis-data:
