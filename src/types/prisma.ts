// Prisma types for the application
// These types are generated by Prisma and provide type safety

import type { Account, Faucet, Rank, ZapLog } from '@prisma/client';

// Export the base Prisma types
export type { Account, Faucet, Rank, ZapLog };

// Extended types that maintain compatibility with existing code
export interface AccountWithRelations extends Account {
  faucets?: Faucet[];
  ranks?: Rank[];
  sentZaps?: ZapLog[];
  receivedZaps?: ZapLog[];
}

export interface FaucetWithRelations extends Faucet {
  owner?: Account;
}

export interface RankWithRelations extends Rank {
  account?: Account;
}

export interface ZapLogWithRelations extends ZapLog {
  sender?: Account;
  receiver?: Account;
}

// Input types for creating/updating records
export type AccountCreateInput = Omit<Account, 'id' | 'createdAt' | 'updatedAt'>;
export type FaucetCreateInput = Omit<Faucet, 'id' | 'createdAt' | 'updatedAt'>;
export type RankCreateInput = Omit<Rank, 'id' | 'createdAt' | 'updatedAt'>;
export type ZapLogCreateInput = Omit<ZapLog, 'id' | 'createdAt' | 'updatedAt'>;

// Update types
export type AccountUpdateInput = Partial<Omit<Account, 'id' | 'createdAt' | 'updatedAt'>>;
export type FaucetUpdateInput = Partial<Omit<Faucet, 'id' | 'createdAt' | 'updatedAt'>>;
export type RankUpdateInput = Partial<Omit<Rank, 'id' | 'createdAt' | 'updatedAt'>>;
export type ZapLogUpdateInput = Partial<Omit<ZapLog, 'id' | 'createdAt' | 'updatedAt'>>;

// Query result types
export interface AccountQueryResult {
  success: boolean;
  data?: AccountWithRelations;
  error?: string;
}

export interface FaucetQueryResult {
  success: boolean;
  data?: FaucetWithRelations;
  error?: string;
}

export interface RankQueryResult {
  success: boolean;
  data?: RankWithRelations;
  error?: string;
}

export interface ZapLogQueryResult {
  success: boolean;
  data?: ZapLogWithRelations;
  error?: string;
}

// List query result types
export interface AccountListResult {
  success: boolean;
  data?: AccountWithRelations[];
  error?: string;
  total?: number;
}

export interface FaucetListResult {
  success: boolean;
  data?: FaucetWithRelations[];
  error?: string;
  total?: number;
}

export interface RankListResult {
  success: boolean;
  data?: RankWithRelations[];
  error?: string;
  total?: number;
}

export interface ZapLogListResult {
  success: boolean;
  data?: ZapLogWithRelations[];
  error?: string;
  total?: number;
}

// Zap Reaction Configuration types
export interface ZapReactionConfig {
  enabled: boolean;
  amount: number;
}

export interface ZapReactionConfigUpdate {
  enabled?: boolean;
  amount?: number;
}

export interface ZapReactionConfigResult {
  success: boolean;
  config?: ZapReactionConfig;
  error?: string;
}
